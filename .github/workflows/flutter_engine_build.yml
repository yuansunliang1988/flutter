name: Build Flutter Windows Engine

on:
  push:
    branches:
      - master  # 触发构建的分支
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: windows-latest  # 使用 GitHub 提供的 Windows 环境

    steps:
      # 1. 检出代码
      - name: Checkout Flutter
        uses: actions/checkout@v4
        with:
          submodules: true  # 确保子模块也被拉取

      # 2. 安装 Python 3.x（如果未预装）
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      # 3. 安装 depot_tools（Flutter 构建依赖）
      - name: Install depot_tools
        run: |
          git clone https://chromium.googlesource.com/chromium/tools/depot_tools.git
          echo "$(Get-Location)\depot_tools" >> $env:GITHUB_PATH

      # 4. 使用 GitHub Actions 预装的 Visual Studio（推荐）
      - name: Setup Visual Studio
        uses: microsoft/setup-msbuild@v1.1

      # 5. 安装 Dart SDK
      - name: Setup Dart
        uses: dart-lang/setup-dart@v1
        with:
          sdk: stable

      # 6. 安装 Flutter
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'

      # 7. 配置 Git 全局设置
      - name: Configure Git
        run: |
          git config --global core.autocrlf false
          git config --global core.filemode false
          git config --global core.fscache true
          git config --global core.preloadindex true

      # 8. 同步 Flutter 引擎代码
      - name: Sync Flutter Engine
        run: |
          cd engine
          gclient config https://github.com/flutter/flutter.git
          gclient sync --nohooks

      # 9. 生成构建配置（GN）
      - name: Generate GN Build Files
        run: |
          cd engine
          .\buildtools\win\gn.exe gen out\host_release --args="target_cpu=\"x64\" is_debug=false is_official_build=true is_component_build=false enable_impeller=true"

      # 10. 编译 Flutter Windows 引擎
      - name: Build Flutter Windows Engine
        run: |
          cd engine
          .\buildtools\win\ninja.exe -C out\host_release

      # 11. 上传构建产物（flutter_engine.dll, lib, pdb）
      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: flutter_engine_windows_release
          path: |
            engine/out/host_release/flutter_engine.dll
            engine/out/host_release/flutter_engine.lib
            engine/out/host_release/flutter_engine.pdb